/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.HospitalAdminWorkSpace;

import Business.Employee.Employee;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.RegularExpressionCheck;
import java.awt.CardLayout;
import java.awt.Font;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Game of Threads
 */
public class ManageEmployeeJPanel extends javax.swing.JPanel {

    JPanel container;
    private OrganizationDirectory organizationDir;
    /**
     * Creates new form ManageEmployeeJPanel
     */
    public ManageEmployeeJPanel(JPanel container, OrganizationDirectory organizationDir ) {
        initComponents();
        this.container = container;
        this.organizationDir = organizationDir;
        organizationJTable.getTableHeader().setFont(new Font("Times New Roman" , Font.ITALIC,23));
        
        populateOrganizationComboBox();
        populateOrganizationEmpComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        organizationJComboBox = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        organizationJTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        organizationEmpJComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        nameJTextField = new javax.swing.JTextField();
        backJButton = new javax.swing.JButton();
        createEmployeeBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 153, 153));
        setForeground(new java.awt.Color(255, 204, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 23)); // NOI18N
        jLabel1.setText("Sort by:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        organizationJComboBox.setFont(new java.awt.Font("Times New Roman", 1, 23)); // NOI18N
        organizationJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        organizationJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationJComboBoxActionPerformed(evt);
            }
        });
        add(organizationJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 60, 380, -1));

        organizationJTable.setFont(new java.awt.Font("Times New Roman", 1, 23)); // NOI18N
        organizationJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(organizationJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 1070, 110));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 23)); // NOI18N
        jLabel3.setText("Organization:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, -1, -1));

        organizationEmpJComboBox.setFont(new java.awt.Font("Times New Roman", 1, 23)); // NOI18N
        organizationEmpJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        organizationEmpJComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                organizationEmpJComboBoxMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                organizationEmpJComboBoxMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                organizationEmpJComboBoxMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                organizationEmpJComboBoxMouseReleased(evt);
            }
        });
        organizationEmpJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationEmpJComboBoxActionPerformed(evt);
            }
        });
        add(organizationEmpJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 370, 270, -1));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 23)); // NOI18N
        jLabel2.setText("Name:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, -1, -1));

        nameJTextField.setFont(new java.awt.Font("Times New Roman", 1, 23)); // NOI18N
        add(nameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 410, 270, -1));

        backJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userInterface/Images/IMAGES/back.jpg"))); // NOI18N
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 570, 120, 51));

        createEmployeeBtn.setFont(new java.awt.Font("Times New Roman", 1, 23)); // NOI18N
        createEmployeeBtn.setForeground(new java.awt.Color(255, 51, 51));
        createEmployeeBtn.setText("Add ");
        createEmployeeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createEmployeeBtnActionPerformed(evt);
            }
        });
        add(createEmployeeBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 570, 180, 50));
    }// </editor-fold>//GEN-END:initComponents

    private void organizationJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationJComboBoxActionPerformed
        Organization organization = (Organization) organizationJComboBox.getSelectedItem();
        if (organization != null){
            populateTable(organization);
        }
    }//GEN-LAST:event_organizationJComboBoxActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void createEmployeeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createEmployeeBtnActionPerformed
       if(nameJTextField.getText().equals("") && !String.valueOf(organizationEmpJComboBox.getItemAt(organizationEmpJComboBox.getSelectedIndex())).equals("Visitor Organization")){
           JOptionPane.showMessageDialog(null, "Please enter the name.");
           return;
         }
       if(!RegularExpressionCheck.findRE(nameJTextField.getText())){
             JOptionPane.showMessageDialog(null, "Please enter valid name.");
            return;
       }
        Organization organization = (Organization) organizationEmpJComboBox.getSelectedItem();
        String name = nameJTextField.getText();
        
        if(organization.getName().equals("Visitor Organization")){
            //open new JPanel
            ManageHospitalVisitors hospitalVisitorsJPanel = new ManageHospitalVisitors(container, organization);
            container.add("hospitalVisitorsJPanel", hospitalVisitorsJPanel);
            CardLayout layout = (CardLayout) container.getLayout();
            layout.next(container);
            
        }else{
            organization.getEmployeeDirectory().createEmployee(name);
            populateTable(organization);
            JOptionPane.showMessageDialog(null, "Added successfully!");
        }
        nameJTextField.setText("");

    }//GEN-LAST:event_createEmployeeBtnActionPerformed

    private void organizationEmpJComboBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_organizationEmpJComboBoxMouseClicked
    }//GEN-LAST:event_organizationEmpJComboBoxMouseClicked

    private void organizationEmpJComboBoxMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_organizationEmpJComboBoxMousePressed
    }//GEN-LAST:event_organizationEmpJComboBoxMousePressed

    private void organizationEmpJComboBoxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_organizationEmpJComboBoxMouseEntered
    }//GEN-LAST:event_organizationEmpJComboBoxMouseEntered

    private void organizationEmpJComboBoxMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_organizationEmpJComboBoxMouseReleased
    }//GEN-LAST:event_organizationEmpJComboBoxMouseReleased

    private void organizationEmpJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationEmpJComboBoxActionPerformed
        if(String.valueOf(organizationEmpJComboBox.getItemAt(organizationEmpJComboBox.getSelectedIndex())).equals("Visitor Organization")){
        nameJTextField.setEnabled(false);
        nameJTextField.setEditable(false);
        }
        else{
        nameJTextField.setEnabled(true);
        nameJTextField.setEditable(true);
        }

    }//GEN-LAST:event_organizationEmpJComboBoxActionPerformed


    private void populateTable(Organization organization){
        DefaultTableModel model = (DefaultTableModel) organizationJTable.getModel();
        
        model.setRowCount(0);
        
        for (Employee employee : organization.getEmployeeDirectory().getEmployeeList()){
            Object[] row = new Object[2];
            row[0] = employee.getId();
            row[1] = employee.getName();
            model.addRow(row);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton createEmployeeBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JComboBox organizationEmpJComboBox;
    private javax.swing.JComboBox organizationJComboBox;
    private javax.swing.JTable organizationJTable;
    // End of variables declaration//GEN-END:variables

    private void populateOrganizationComboBox() {
        organizationJComboBox.removeAllItems();
        
        for (Organization organization : organizationDir.getOrganizationList()){
            organizationJComboBox.addItem(organization);
        }
    }

    private void populateOrganizationEmpComboBox() {
        organizationEmpJComboBox.removeAllItems();
        
        for (Organization organization : organizationDir.getOrganizationList()){
            organizationEmpJComboBox.addItem(organization);
        }
    }
}
