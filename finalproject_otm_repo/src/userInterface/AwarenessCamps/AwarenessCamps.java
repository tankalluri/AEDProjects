/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.AwarenessCamps;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Organization.VisitorOrganization;
import Business.Person.AwarenessEvent;
import Business.Person.Visitor;
import Business.Person.VisitorDirectory;
import java.awt.Font;
import java.util.Date;
import java.util.Properties;
import javax.mail.Message;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Game of Threads
 */
public class AwarenessCamps extends javax.swing.JPanel {

    EcoSystem system;
    JPanel rightPanel;
    VisitorDirectory vd = new VisitorDirectory();
    /**
     * Creates new form AwarenessCamps
     */
    public AwarenessCamps(JPanel rightPanel, EcoSystem system) {
        initComponents();
        this.rightPanel = rightPanel;
        this.system = system;
        
        populateTable();
        populateNetworkComboBox();
        eventInfoJTable.getTableHeader().setFont(new Font("Times New Roman" , Font.ITALIC,23));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        networkJComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        createEvent = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        eventInfoJTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        eventNameTxt = new javax.swing.JTextField();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();

        setBackground(new java.awt.Color(0, 153, 153));
        setForeground(new java.awt.Color(0, 153, 153));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 23)); // NOI18N
        jLabel1.setText("Select the city:");

        networkJComboBox.setFont(new java.awt.Font("Times New Roman", 1, 23)); // NOI18N
        networkJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 23)); // NOI18N
        jLabel2.setText("Select Date:");

        createEvent.setFont(new java.awt.Font("Times New Roman", 1, 23)); // NOI18N
        createEvent.setText("Create Event");
        createEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createEventActionPerformed(evt);
            }
        });

        eventInfoJTable.setBackground(new java.awt.Color(204, 255, 204));
        eventInfoJTable.setFont(new java.awt.Font("Times New Roman", 1, 23)); // NOI18N
        eventInfoJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Event Name", "Network", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(eventInfoJTable);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 23)); // NOI18N
        jLabel3.setText("Scheduled Event Details");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 23)); // NOI18N
        jLabel4.setText("Event Name:");

        eventNameTxt.setFont(new java.awt.Font("Times New Roman", 1, 23)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4))
                        .addGap(86, 86, 86)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(networkJComboBox, 0, 147, Short.MAX_VALUE)
                            .addComponent(eventNameTxt)
                            .addComponent(jDateChooser2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 826, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(244, 244, 244)
                        .addComponent(createEvent)))
                .addContainerGap(376, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(networkJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(eventNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addComponent(createEvent)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    public void sendEmail(String email, String eventName, String dateOfEvent){
            final String to = email;
            boolean sessionDebug=false;
            String from = "aditijal1992@gmail.com"; 
            String host = "smtp.gmail.com";
            String user="aditijal1992@gmail.com";
            String pass = "@Diti123";
            Properties properties = System.getProperties();  
            properties.setProperty("mail.smtp.host", host); properties.put("mail.smtp.starttls.required", "true");
            properties.put("mail.smtp.starttls.enable", "true");
            properties.put("mail.smtp.host",host);  
            properties.put("mail.smtp.port", "587");  
            properties.put("mail.smtp.auth", "true");  
            java.security.Security.addProvider(new com.sun.net.ssl.internal.ssl.Provider());  
            Session session;
            session = Session.getDefaultInstance(properties,  null);
            session.setDebug(sessionDebug);
            try{
            MimeMessage message = new MimeMessage(session);  
            message.setFrom(new InternetAddress(from));  
            message.setRecipient(Message.RecipientType.TO,new InternetAddress(to));  
            InternetAddress address;
            address = new InternetAddress(to);
            message.setSubject("Did you know?");  
            message.setText("Please visit the awareness camp titled "+eventName+"on "+dateOfEvent+"in "+networkJComboBox.getItemAt(networkJComboBox.getSelectedIndex())+" to learn more about the important of organ donation. Please RSVP");  
            Transport transport = session.getTransport("smtp");
            transport.connect(host,user,pass);
            transport.sendMessage(message, message.getAllRecipients());
            transport.close();
            //JOptionPane.showMessageDialog(null, "Please check your email for further details!");
            }
            
            catch(Exception e){
                System.out.println(e);
                JOptionPane.showMessageDialog(null, "Error!");
            }
    }
    
    private void createEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createEventActionPerformed
        
        Network city =  (Network) networkJComboBox.getSelectedItem();
        String name = eventNameTxt.getText();
        Date date = jDateChooser2.getDate();
        if(name.equals("") && date == null && city.equals(null)){
            JOptionPane.showMessageDialog(null, "Please fill all details.");
            return;
        }
        if(system != null){
            for(Visitor v :vd.getVisitorList()){
                sendEmail(v.getEmail(), eventNameTxt.getText(), String.valueOf(date));
            }
            for(Network n: system.getNetworkList()){
                if(n.getName().equals(String.valueOf(networkJComboBox.getItemAt(networkJComboBox.getSelectedIndex())))){
                  for(Enterprise e:   n.getEnterpriseDirectory().getEnterpriseList()){
                    for (Organization o: e.getOrganizationDirectory().getOrganizationList()){
                        if(o instanceof VisitorOrganization){
//                        for(Visitor v: o.getVd().getVisitorList()){
//                            sendEmail(v.getEmail(), eventNameTxt.getText(), String.valueOf(date));  
//                        }
                    }
                    }
                  }
                }
            }
            
            AwarenessEvent event = system.createEvent();
            event.setEventName(name);
            event.setNetworkName(city.getName());
            event.setEventDate(date);
            
            JOptionPane.showMessageDialog(null, "Awareness event created successfully.");
            eventNameTxt.setText("");
            jDateChooser2.setDate(null);
            populateTable();
        }
    }//GEN-LAST:event_createEventActionPerformed


    private void populateNetworkComboBox(){
        networkJComboBox.removeAllItems();
        
        for (Network network : system.getNetworkList()){
            networkJComboBox.addItem(network);
        }
    }
    
    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) eventInfoJTable.getModel();

        model.setRowCount(0);
        if(system != null && system.getEventList() != null){
            for (AwarenessEvent event : system.getEventList()) {
                Object[] row = new Object[3];
                row[0] = event.getEventName();
                row[1] = event.getNetworkName();
                row[2] = event.getEventDate();

                model.addRow(row);
            }
        }
 
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createEvent;
    private javax.swing.JTable eventInfoJTable;
    private javax.swing.JTextField eventNameTxt;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox networkJComboBox;
    // End of variables declaration//GEN-END:variables
}
